name: main

on:
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-07-26
          components: rustfmt,clippy
          targets: wasm32-unknown-unknown

      - name: Add rust-src
        run: rustup component add rust-src --toolchain nightly-2024-07-26-x86_64-unknown-linux-gnu

      - name: Set up cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run checks
        run: ./check.sh

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          package_json_file: sandbox/package.json

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: "sandbox/.nvmrc"
          cache: pnpm
          cache-dependency-path: "sandbox/pnpm-lock.yaml"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: ./sandbox
        run: pnpm install

      - name: Install Playwright Browsers
        working-directory: ./sandbox
        run: pnpm exec playwright install --with-deps

      - name: Build Dev
        run: ./dev.sh

      - name: Run Playwright dev tests
        working-directory: ./sandbox
        run: pnpm exec playwright test dev.spec.ts

      - name: Build Prod
        run: ./prod.sh

      - name: Run Playwright prod tests
        working-directory: ./sandbox
        run: pnpm exec playwright test prod.spec.ts

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: sandbox/playwright-report/
          retention-days: 30

      - name: Prepublish
        run: ./prepublish.sh

      - name: Publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: pkg

      - name: Compute tag
        id: compute-tag
        run: |
          set -e
          TAG=$(cat Cargo.toml \
            | grep --extended-regexp "^version =" \
            | grep --extended-regexp --only-matching "[0-9]+\.[0-9]+.[0-9]+[-\.\+a-zA-Z0-9]*" \
            | head --lines=1)
          echo "tag=v$TAG" >> "$GITHUB_OUTPUT"

      - name: Tag repo using version specified in Cargo.toml
        uses: djordon/git-autotag-action@v0.7.0-beta2
        with:
          tag: ${{ steps.compute-tag.outputs.tag }}
